import { ArrowLeftOutlined } from '@ant-design/icons';
import { environment } from "../../../../../environments";
import { Modal, Button, Image, Divider, Form, Input } from 'antd';
import { nmbBlueLogo } from '../../../../../../../libs/v2/assets/images';
import {
  login,
  selectAuthDetails,
  setLoginPopup,
} from '../slices/authentication';
import {
    useAppDispatch,
    useAppSelector,
    useGetSystToken,
    useReduxPost,
} from '../../common/lib/hooks';

/**
 * @function
 * @name Login
 * @description Verified User
 * @returns {object} User object
 * @version 0.2.1
 * @since 0.1.0
 * @author Prince Malipula
 */

const LoginModal = () => {
    const reduxPost = useReduxPost();
    const dispatch = useAppDispatch();
    const [LoginForm] = Form.useForm();
    const getSystToken = useGetSystToken();
    const { loading, user } = useAppSelector(selectAuthDetails);

    const handleSubmit = (credentials: any) => {
        credentials = {
            ...credentials,
            clientId: environment[environment.env].CLIENT_ID,
            clientSecret: environment[environment.env].CLIENT_SECRET,
        };
        reduxPost(login, credentials).then(() => {
            getSystToken().then(() => dispatch(setLoginPopup(false)));
        });
    };

    const signout = () => {
        dispatch(setLoginPopup(false));
        document.location.href = environment[environment.env].NMP_URL
    };

    return (
        <>
            <Modal
                visible={true}
                onOk={handleSubmit}
                footer={null}
                closable={false}
            >
                <div className="text-center">
                    <Image
                        src={nmbBlueLogo}
                        alt="logo"
                        width={150}
                        height={150}
                        preview={false}
                    />
                </div>
                <Divider>Login</Divider>
                <Form
                    name="LoginForm"
                    form={LoginForm}
                    onFinish={handleSubmit}
                    initialValues={{
                        username: user.username,
                    }}
                >
                    <Form.Item
                        label="Username"
                        name="username"
                        rules={[
                            {
                                required: true,
                                message: 'Please input your username!',
                            },
                        ]}
                    >
                        <Input readOnly={true} />
                    </Form.Item>

                    <Form.Item
                        label="Password"
                        name="password"
                        rules={[
                            {
                                required: true,
                                message: 'Please input your password!',
                            },
                        ]}
                    >
                        <Input.Password />
                    </Form.Item>

                    <Form.Item label="Digipass" name="otp">
                        <Input />
                    </Form.Item>

                    <Form.Item>
                        <div className="flex justify-end">
                            <Button
                                type="link"
                                onClick={signout}
                                icon={<ArrowLeftOutlined />}
                            >
                                Sign Out
                            </Button>
                            <Button
                                key="submit"
                                htmlType="submit"
                                type="primary"
                                loading={loading}
                            >
                                Login
                            </Button>
                        </div>
                    </Form.Item>
                </Form>
            </Modal>
        </>
    );
};

export default LoginModal;
